scale_colour_gradient(name = paste0("      Evolução Imóveis - SP\n      ",as.character(i)),
limits=range(temp2$units),
low="#FCB9B2", high="#B23A48") + # Price Density Color
theme(axis.line=element_blank(),
axis.text.x=element_blank(), axis.title.x=element_blank(),
axis.text.y=element_blank(), axis.title.y=element_blank(),
axis.ticks=element_blank(),
panel.background = element_blank()) # Clean Everything
plot_gg(map_density, multicore = TRUE, width = diff(xlim)*15 ,height=diff(ylim)*10, fov = 70, scale = 300)
par3d(windowRect = c(0, 0, diff(xlim) * 2000, diff(ylim) * 2500))
# Render Image
render_camera(fov = 120, zoom = 0.3, theta = 20, phi = 45)
render_depth(focus = 0.8, focallength = 1)
render_snapshot(paste0('~/GitHub/MIM/dados/map_',i,'.png'), clear = TRUE)
plot_gg(map_density, multicore = TRUE, width = diff(xlim)*15 ,height=diff(ylim)*10, fov = 70, scale = 300)
par3d(windowRect = c(0, 0, diff(xlim) * 2000, diff(ylim) * 2500))
# Render Video
# Video 1
phivechalf = 30 + 60 * 1/(1 + exp(seq(-7, 20, length.out = 180)/2))
phivecfull = c(phivechalf, rev(phivechalf))
thetavec = 0 + 45 * sin(seq(0,359,length.out = 360) * pi/180)
zoomvec = 0.45 + 0.2 * 1/(1 + exp(seq(-5, 20, length.out = 180)))
zoomvecfull = c(zoomvec, rev(zoomvec))
render_movie(filename = paste0('~/GitHub/MIM/dados/video_',i), type = "custom", frames = 360,  phi = phivecfull, zoom = zoomvecfull, theta = thetavec)
# # Video 2
# transition_values <- function(from, to, steps = 10, one_way = FALSE, type = "cos") {
#   if (!(type %in% c("cos", "lin"))){stop("type must be one of: 'cos', 'lin'")}
#   range <- c(from, to)
#   middle <- mean(range)
#   half_width <- diff(range)/2
#   if (type == "cos") {scaling <- cos(seq(0, 2*pi / ifelse(one_way, 2, 1), length.out = steps))}
#   else if (type == "lin"){
#     if (one_way) {xout <- seq(1, -1, length.out = steps)}
#     else {xout <- c(seq(1, -1, length.out = floor(steps/2)), seq(-1, 1, length.out = ceiling(steps/2)))}
#     scaling <- approx(x = c(-1, 1), y = c(-1, 1), xout = xout)$y }
#   middle - half_width * scaling
# }
# theta <- transition_values(from = 0, to = 360, steps = 360, one_way = TRUE, type = "lin")
# phi <- transition_values(from = 10, to = 70, steps = 360, one_way = FALSE, type = "cos")
# zoom <- transition_values(from = 0.4, to = 0.8, steps = 360, one_way = FALSE, type = "cos")
# render_movie(filename = '~/GitHub/MIM/dados/output2', type = "custom", frames = 360,  phi = phi, zoom = zoom, theta = theta)
#
# Close Windows
rgl.close()
}
if (!require('htmlwidgets'))install.packages("htmlwidgets");library(htmlwidgets)
if (!require('leaflet'))install.packages("leaflet");library(leaflet)
if (!require('leaflegend'))install.packages("leaflegend");library(leaflegend)
if (!require('rgdal'))install.packages("rgdal");library(rgdal)
if (!require('data.table'))install.packages("data.table");library(data.table)
if (!require('sp'))install.packages("sp");library(sp)
if (!require('KernSmooth'))install.packages("KernSmooth");library(KernSmooth)
if (!require('raster'))install.packages("raster");library(raster)
if (!require("dplyr")) install.packages("dplyr");library(dplyr)
if (!require("plyr")) install.packages("plyr");library(plyr)
if (!require('sp'))install.packages('sp', dependencies=T);library(sp)
if (!require('rgeos'))install.packages("rgeos");library(rgeos)
if (!require('readr'))install.packages("readr");library(readr)
if (!require('rayshader'))install.packages("rayshader");library(rayshader)
if (!require('ggplot2'))install.packages("ggplot2");library(ggplot2)
if (!require('png'))install.packages("png");library(png)
if (!require('grid'))install.packages("grid");library(grid)
if (!require('rgl'))install.packages("rgl");library(rgl)
if (!require('stringr'))install.packages("stringr");library(stringr)
if (!require('zoo'))install.packages('zoo');library(zoo)
if (!require('rbcb'))install.packages('rbcb');library(rbcb)
if (!require('lubridate'))install.packages("lubridate");library(lubridate)
setwd("~/GitHub/Dashes/HTMLs")
# constantes --------------------------------------------------------------
shapefile <- readOGR(dsn="~/GitHub/MIM/dados/shp/DISTRITO_MUNICIPAL_SP_SMDUPolygon.shp", layer="DISTRITO_MUNICIPAL_SP_SMDUPolygon")
shapefile <- spTransform(shapefile, CRS("+proj=longlat +datum=WGS84"))
# Functions ---------------------------------------------------------------
maps_func <- function(df, title_graph){
leaflet(df) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_1_e_2_domicilio_ano_1991)),
label = ~paste0(localidade, ": ", format(comodos_1_e_2_domicilio_ano_1991, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("1 e 2   comodos 1991",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_1_e_2_domicilio_ano_2000)),
label = ~paste0(localidade, ": ", format(comodos_1_e_2_domicilio_ano_2000, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("1 e 2   comodos 2000",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_1_e_2_domicilio_ano_2010)),
label = ~paste0(localidade, ": ", format(comodos_1_e_2_domicilio_ano_2010, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("1 e 2   comodos 2010",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_3_e_4_domicilio_ano_1991)),
label = ~paste0(localidade, ": ", format(comodos_3_e_4_domicilio_ano_1991, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("3 e 4   comodos 1991",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_3_e_4_domicilio_ano_2000)),
label = ~paste0(localidade, ": ", format(comodos_3_e_4_domicilio_ano_2000, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("3 e 4   comodos 2000",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_3_e_4_domicilio_ano_2010)),
label = ~paste0(localidade, ": ", format(comodos_3_e_4_domicilio_ano_2010, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("3 e 4   comodos 2010",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_5_e_6_domicilio_ano_1991)),
label = ~paste0(localidade, ": ", format(comodos_5_e_6_domicilio_ano_1991, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("5 e 6   comodos 1991",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_5_e_6_domicilio_ano_2000)),
label = ~paste0(localidade, ": ", format(comodos_5_e_6_domicilio_ano_2000, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("5 e 6   comodos 2000",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_5_e_6_domicilio_ano_2010)),
label = ~paste0(localidade, ": ", format(comodos_5_e_6_domicilio_ano_2010, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("5 e 6   comodos 2010",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_7_e_8_domicilio_ano_1991)),
label = ~paste0(localidade, ": ", format(comodos_7_e_8_domicilio_ano_1991, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("7 e 8   comodos 1991",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_7_e_8_domicilio_ano_2000)),
label = ~paste0(localidade, ": ", format(comodos_7_e_8_domicilio_ano_2000, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("7 e 8   comodos 2000",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_7_e_8_domicilio_ano_2010)),
label = ~paste0(localidade, ": ", format(comodos_7_e_8_domicilio_ano_2010, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("7 e 8   comodos 2010",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_9_e_10_mais_domicilio_ano_1991)),
label = ~paste0(localidade, ": ", format(comodos_9_e_10_mais_domicilio_ano_1991, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("9 e 10+ comodos 1991",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_9_e_10_mais_domicilio_ano_2000)),
label = ~paste0(localidade, ": ", format(comodos_9_e_10_mais_domicilio_ano_2000, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("9 e 10+ comodos 2000",id, sep="")) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.7,
fillColor = ~pal(log10(comodos_9_e_10_mais_domicilio_ano_2010)),
label = ~paste0(localidade, ": ", format(comodos_9_e_10_mais_domicilio_ano_2010, decimal.mark = ",", big.mark = ".", nsmall = 2)),
group = ~uf,
layerId = ~paste("9 e 10+ comodos 2010",id, sep="")) %>%
addLegendNumeric(pal = pal,
values = df$comodos_1_e_2_domicilio_ano_1991,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '1 e 2   comodos 1991') %>%
addLegendNumeric(pal = pal,
values = df$comodos_1_e_2_domicilio_ano_2000,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '1 e 2   comodos 2000') %>%
addLegendNumeric(pal = pal,
values = df$comodos_1_e_2_domicilio_ano_2010,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '1 e 2   comodos 2010') %>%
addLegendNumeric(pal = pal,
values = df$comodos_3_e_4_domicilio_ano_1991,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '3 e 4   comodos 1991') %>%
addLegendNumeric(pal = pal,
values = df$comodos_3_e_4_domicilio_ano_2000,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '3 e 4   comodos 2000') %>%
addLegendNumeric(pal = pal,
values = df$comodos_3_e_4_domicilio_ano_2010,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '3 e 4   comodos 2010') %>%
addLegendNumeric(pal = pal,
values = df$comodos_5_e_6_domicilio_ano_1991,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '5 e 6   comodos 1991') %>%
addLegendNumeric(pal = pal,
values = df$comodos_5_e_6_domicilio_ano_2000,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '5 e 6   comodos 2000') %>%
addLegendNumeric(pal = pal,
values = df$comodos_5_e_6_domicilio_ano_2010,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '5 e 6   comodos 2010') %>%
addLegendNumeric(pal = pal,
values = df$comodos_7_e_8_domicilio_ano_1991,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '7 e 8   comodos 1991') %>%
addLegendNumeric(pal = pal,
values = df$comodos_7_e_8_domicilio_ano_2000,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '7 e 8   comodos 2000') %>%
addLegendNumeric(pal = pal,
values = df$comodos_7_e_8_domicilio_ano_2010,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '7 e 8   comodos 2010') %>%
addLegendNumeric(pal = pal,
values = df$comodos_9_e_10_mais_domicilio_ano_1991,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '9 e 10+ comodos 1991') %>%
addLegendNumeric(pal = pal,
values = df$comodos_9_e_10_mais_domicilio_ano_2000,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '9 e 10+ comodos 2000') %>%
addLegendNumeric(pal = pal,
values = df$comodos_9_e_10_mais_domicilio_ano_2010,
title = title_graph,
orientation = 'horizontal',
width = 250,
height = 20,
position = 'bottomleft',
group = '9 e 10+ comodos 2010') %>%
addLayersControl(baseGroups = c('1 e 2   comodos 1991', '1 e 2   comodos 2000', '1 e 2   comodos 2010','3 e 4   comodos 1991', '3 e 4   comodos 2000', '3 e 4   comodos 2010',
'5 e 6   comodos 1991', '5 e 6   comodos 2000', '5 e 6   comodos 2010','7 e 8   comodos 1991', '7 e 8   comodos 2000', '7 e 8   comodos 2010',
'9 e 10+ comodos 1991', '9 e 10+ comodos 2000', '9 e 10+ comodos 2010'),
overlayGroups = c("PR", "AL", "PB", "MG", "PA", "PE", "BA", "RS", "SP", "PI", "MT", "AM", "AP", "RN", "SE", "RO", "SC", "RJ",
"MA", "CE", "DF", "ES", "GO", "MS", "TO", "RR", "AC"),
options = layersControlOptions(collapsed = TRUE))%>%
hideGroup(c("PR", "AL", "PB", "MG", "PA", "PE", "BA", "RS", "PI", "MT", "AM", "AP", "RN", "SE", "RO", "SC", "RJ",
"MA", "CE", "DF", "ES", "GO", "MS", "TO", "RR", "AC"))%>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = '1 e 2   comodos 1991';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('1 e 2   comodos 1991' !== id.substring(0,20)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(0,20)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(0,20)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(0,20)){
layer.getElement().style.display = 'none';
}
}
})
})
}") -> mapa
return(mapa)
}
geo_bairro <- function(df){
df_temp <- subset(df, select = c("lat","lon"))
df_temp <- subset(df_temp,!is.na(df_temp$lat))
coordinates(df_temp)<-c("lon","lat")
proj4string(df_temp) <- proj4string(shapefile)
df <- cbind(df,over(df_temp, shapefile))
return(df)
}
trunc_dec <- function(x, ..., prec = 0) base::trunc(x * 10^prec, ...) / 10^prec;
format_real <- function(values, nsmall = 0) {
values %>%
as.numeric() %>%
format(nsmall = nsmall, decimal.mark = ",", big.mark = ".") %>%
str_trim() %>%
str_c("R$ ", .)
}
for(i in c(1995:2022)){
if(i != 1995){
temp <- read_csv(paste0('B:/Data/geo_eg_',i,'.csv'))
temp_distinct <- anti_join(temp, geo_eg, by = "numero_do_contribuinte")
temp_distinct <- temp_distinct[temp_distinct$ano_do_exercicio != i,]
geo_eg <- rbind(temp,temp_distinct)
rm(temp, temp_distinct)
}else{
geo_eg <- read_csv(paste0('B:/Data/geo_eg_',i,'.csv'))
}
}
geo_eg <- subset(geo_eg, geo_eg$ano_da_construcao_corrigido>=1900)
geo_eg_temp <- subset(geo_eg,!is.na(geo_eg$lat))
geo_eg_temp <- geo_bairro(geo_eg_temp)
temp <- geo_eg_temp %>% dplyr::group_by(Nome) %>%
dplyr::summarise(units = n(), .groups = "drop" )
names(temp) <- tolower(names(temp))
map_data = data.frame(id=shapefile$Codigo, nome=shapefile$Nome)
states = fortify(shapefile)
map_data = merge(states, map_data, by="id")
map_data = merge(map_data, temp, by="nome")
# Map
map = ggplot(map_data, aes(long, lat, group=group, fill = 1)) +
geom_polygon() + # Shape
scale_fill_gradient(limits=range(c(1,2)),
low="#FFF3B0", high="#E09F3E") + # Population Density Color
layer(geom="path", stat="identity", position="identity",
mapping=aes(x=long, y=lat, group=group,
color=I('#FFFFFF'))) # Boarder Color
map = map + theme(legend.position = "none",
axis.line=element_blank(),
axis.text.x=element_blank(), axis.title.x=element_blank(),
axis.text.y=element_blank(), axis.title.y=element_blank(),
axis.ticks=element_blank(),
panel.background = element_blank()) # Clean Everything
xlim = ggplot_build(map)$layout$panel_scales_x[[1]]$range$range
ylim = ggplot_build(map)$layout$panel_scales_y[[1]]$range$range
map
ggsave('~/GitHub/Dashes/HTMLs/evolucao_imoveis/Rplot.png', width = diff(xlim)*40, height = diff(ylim)*40, units = "cm")
for(j in c("Residencial vertical","Residencial horizontal","Comercial horizontal","Comercial vertical")){
geo_eg_partion <- subset(geo_eg, startsWith(geo_eg$tipo_de_padrao_da_construcao,j))
geo_eg_acumulado = data.frame()
for(i in sort(unique(geo_eg_partion$ano_da_construcao_corrigido))){
geo_eg_temp <- subset(geo_eg_partion,(!is.na(geo_eg_partion$lat)&geo_eg_partion$ano_da_construcao_corrigido==i))
geo_eg_temp <- geo_bairro(geo_eg_temp)
geo_eg_acumulado <- rbind(geo_eg_acumulado,geo_eg_temp)
geo_eg_acumulado$lon <- trunc_dec(geo_eg_acumulado$lon, prec = 3)
geo_eg_acumulado$lat <- trunc_dec(geo_eg_acumulado$lat, prec = 3)
temp2 <- geo_eg_acumulado %>% dplyr::group_by(lon, lat) %>%
dplyr::summarise(units = n(), .groups = "drop" )
names(temp2) <- tolower(names(temp2))
img_map = readPNG('~/GitHub/Dashes/HTMLs/evolucao_imoveis/Rplot.png')
# 2D Plot
map_density = ggplot(temp2[which(temp2$units>=1),]) +
annotation_custom(rasterGrob(img_map, width=unit(1,"npc"), height=unit(1,"npc"))) +
xlim(xlim[1],xlim[2]) + # x-axis Mapping
ylim(ylim[1],ylim[2]) + # y-axis Mapping
geom_point(aes(x=lon, y=lat, color=units), size=1) + # Points
scale_colour_gradient(name = paste0("      Evolução Imóveis - SP\n      ",as.character(i)),
limits=range(1,3000),
low="#F2F2F2", high="#EF6C57") + # Price Density Color
theme(axis.line=element_blank(),
axis.text.x=element_blank(), axis.title.x=element_blank(),
axis.text.y=element_blank(), axis.title.y=element_blank(),
axis.ticks=element_blank(),
panel.background = element_blank()) # Clean Everything
plot_gg(map_density, multicore = TRUE, width = diff(xlim)*15 ,height=diff(ylim)*10, fov = 70, scale = 300)
par3d(windowRect = c(0, 0, diff(xlim) * 2000, diff(ylim) * 2500))
# Render Image
render_camera(fov = 120, zoom = 0.3, theta = 20, phi = 45)
render_depth(focus = 0.8, focallength = 1)
render_snapshot(paste0(gsub(" ","_",j),'/map_',i,'.png'), clear = TRUE)
# plot_gg(map_density, multicore = TRUE, width = diff(xlim)*15 ,height=diff(ylim)*10, fov = 70, scale = 300)
# par3d(windowRect = c(0, 0, diff(xlim) * 2000, diff(ylim) * 2500))
#
# # Render Video
# # Video 1
# phivechalf = 30 + 60 * 1/(1 + exp(seq(-7, 20, length.out = 180)/2))
# phivecfull = c(phivechalf, rev(phivechalf))
# thetavec = 0 + 45 * sin(seq(0,359,length.out = 360) * pi/180)
# zoomvec = 0.45 + 0.2 * 1/(1 + exp(seq(-5, 20, length.out = 180)))
# zoomvecfull = c(zoomvec, rev(zoomvec))
# render_movie(filename = paste0('~/GitHub/MIM/dados/evolucao_imoveis/video_',i), type = "custom", frames = 360,  phi = phivecfull, zoom = zoomvecfull, theta = thetavec)
# # Video 2
# transition_values <- function(from, to, steps = 10, one_way = FALSE, type = "cos") {
#   if (!(type %in% c("cos", "lin"))){stop("type must be one of: 'cos', 'lin'")}
#   range <- c(from, to)
#   middle <- mean(range)
#   half_width <- diff(range)/2
#   if (type == "cos") {scaling <- cos(seq(0, 2*pi / ifelse(one_way, 2, 1), length.out = steps))}
#   else if (type == "lin"){
#     if (one_way) {xout <- seq(1, -1, length.out = steps)}
#     else {xout <- c(seq(1, -1, length.out = floor(steps/2)), seq(-1, 1, length.out = ceiling(steps/2)))}
#     scaling <- approx(x = c(-1, 1), y = c(-1, 1), xout = xout)$y }
#   middle - half_width * scaling
# }
# theta <- transition_values(from = 0, to = 360, steps = 360, one_way = TRUE, type = "lin")
# phi <- transition_values(from = 10, to = 70, steps = 360, one_way = FALSE, type = "cos")
# zoom <- transition_values(from = 0.4, to = 0.8, steps = 360, one_way = FALSE, type = "cos")
# render_movie(filename = '~/GitHub/MIM/dados/output2', type = "custom", frames = 360,  phi = phi, zoom = zoom, theta = theta)
#
# Close Windows
rgl.close()
gc(verbose = getOption("verbose"), reset = TRUE, full = TRUE)
}
}
paste0(gsub(" ","_",j),'/map_',i,'.png')
setwd("~/GitHub/Dashes/HTMLs/evolucao_imoveis")
render_snapshot(paste0(gsub(" ","_",j),'/map_',i,'.png'), clear = TRUE)
for(j in c("Residencial vertical","Residencial horizontal","Comercial horizontal","Comercial vertical")){
geo_eg_partion <- subset(geo_eg, startsWith(geo_eg$tipo_de_padrao_da_construcao,j))
geo_eg_acumulado = data.frame()
for(i in sort(unique(geo_eg_partion$ano_da_construcao_corrigido))){
geo_eg_temp <- subset(geo_eg_partion,(!is.na(geo_eg_partion$lat)&geo_eg_partion$ano_da_construcao_corrigido==i))
geo_eg_temp <- geo_bairro(geo_eg_temp)
geo_eg_acumulado <- rbind(geo_eg_acumulado,geo_eg_temp)
geo_eg_acumulado$lon <- trunc_dec(geo_eg_acumulado$lon, prec = 3)
geo_eg_acumulado$lat <- trunc_dec(geo_eg_acumulado$lat, prec = 3)
temp2 <- geo_eg_acumulado %>% dplyr::group_by(lon, lat) %>%
dplyr::summarise(units = n(), .groups = "drop" )
names(temp2) <- tolower(names(temp2))
img_map = readPNG('~/GitHub/Dashes/HTMLs/evolucao_imoveis/Rplot.png')
# 2D Plot
map_density = ggplot(temp2[which(temp2$units>=1),]) +
annotation_custom(rasterGrob(img_map, width=unit(1,"npc"), height=unit(1,"npc"))) +
xlim(xlim[1],xlim[2]) + # x-axis Mapping
ylim(ylim[1],ylim[2]) + # y-axis Mapping
geom_point(aes(x=lon, y=lat, color=units), size=1) + # Points
scale_colour_gradient(name = paste0("      Evolução Imóveis - SP\n      ",as.character(i)),
limits=range(1,3000),
low="#F2F2F2", high="#EF6C57") + # Price Density Color
theme(axis.line=element_blank(),
axis.text.x=element_blank(), axis.title.x=element_blank(),
axis.text.y=element_blank(), axis.title.y=element_blank(),
axis.ticks=element_blank(),
panel.background = element_blank()) # Clean Everything
plot_gg(map_density, multicore = TRUE, width = diff(xlim)*15 ,height=diff(ylim)*10, fov = 70, scale = 300)
par3d(windowRect = c(0, 0, diff(xlim) * 2000, diff(ylim) * 2500))
# Render Image
render_camera(fov = 120, zoom = 0.3, theta = 20, phi = 45)
render_depth(focus = 0.8, focallength = 1)
render_snapshot(paste0(gsub(" ","_",j),'/map_',i,'.png'), clear = TRUE)
# plot_gg(map_density, multicore = TRUE, width = diff(xlim)*15 ,height=diff(ylim)*10, fov = 70, scale = 300)
# par3d(windowRect = c(0, 0, diff(xlim) * 2000, diff(ylim) * 2500))
#
# # Render Video
# # Video 1
# phivechalf = 30 + 60 * 1/(1 + exp(seq(-7, 20, length.out = 180)/2))
# phivecfull = c(phivechalf, rev(phivechalf))
# thetavec = 0 + 45 * sin(seq(0,359,length.out = 360) * pi/180)
# zoomvec = 0.45 + 0.2 * 1/(1 + exp(seq(-5, 20, length.out = 180)))
# zoomvecfull = c(zoomvec, rev(zoomvec))
# render_movie(filename = paste0('~/GitHub/MIM/dados/evolucao_imoveis/video_',i), type = "custom", frames = 360,  phi = phivecfull, zoom = zoomvecfull, theta = thetavec)
# # Video 2
# transition_values <- function(from, to, steps = 10, one_way = FALSE, type = "cos") {
#   if (!(type %in% c("cos", "lin"))){stop("type must be one of: 'cos', 'lin'")}
#   range <- c(from, to)
#   middle <- mean(range)
#   half_width <- diff(range)/2
#   if (type == "cos") {scaling <- cos(seq(0, 2*pi / ifelse(one_way, 2, 1), length.out = steps))}
#   else if (type == "lin"){
#     if (one_way) {xout <- seq(1, -1, length.out = steps)}
#     else {xout <- c(seq(1, -1, length.out = floor(steps/2)), seq(-1, 1, length.out = ceiling(steps/2)))}
#     scaling <- approx(x = c(-1, 1), y = c(-1, 1), xout = xout)$y }
#   middle - half_width * scaling
# }
# theta <- transition_values(from = 0, to = 360, steps = 360, one_way = TRUE, type = "lin")
# phi <- transition_values(from = 10, to = 70, steps = 360, one_way = FALSE, type = "cos")
# zoom <- transition_values(from = 0.4, to = 0.8, steps = 360, one_way = FALSE, type = "cos")
# render_movie(filename = '~/GitHub/MIM/dados/output2', type = "custom", frames = 360,  phi = phi, zoom = zoom, theta = theta)
#
# Close Windows
rgl.close()
gc(verbose = getOption("verbose"), reset = TRUE, full = TRUE)
}
}
